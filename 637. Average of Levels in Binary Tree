/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Double> averageOfLevels(TreeNode root) {

        List<Double>result = new ArrayList<>();
        if(root == null ){
            return result;
        }

        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);  // 루트노드 삽입

        while(!queue.isEmpty()){ //큐가 빌 때 까지
            int level = queue.size(); //큐의 사이즈(더한 값을 나눠줄 값)
            double sum = 0;

            for(int i =0; i<level; i++){
                TreeNode node = queue.poll(); // 큐 꺼내오기
                sum = sum + node.val; 

                if(node.left != null){
                    queue.add(node.left);
                }

                if(node.right!=null){
                    queue.add(node.right);
                }
            }

            result.add(sum / level);
        }
        return result;
    }
}
